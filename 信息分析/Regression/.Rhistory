data=data_G1)
summary(G1.model2)
AIC(G1.model2)
AIC(G1.model2)
# 检验是否正态
qqPlot(G1.model2)
# 检验是否线性
crPlots(G1.model2)
# 因变量幂次检验
spreadLevelPlot(G1.model2)
# 残差自相关性检验
durbinWatsonTest(G1.model2)
# 离群值检验
influencePlot(G1.model2)
G1.model2 <- lm(sqrt(sqrt(G1))~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model2)
AIC(G1.model2)
G1.model2 <- lm(sqrt(sqrt(G1))~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model2)
AIC(G1.model2)
AIC(G1.model2)
# 检验是否正态
qqPlot(G1.model2)
# 检验是否线性
crPlots(G1.model2)
# 因变量幂次检验
spreadLevelPlot(G1.model2)
# 残差自相关性检验
durbinWatsonTest(G1.model2)
# 离群值检验
influencePlot(G1.model2)
data_G3 <- select(data, -c("school"))
lm.model3 <- lm(G1~.-1, data=data_G1)
summary(lm.model3)
lm.model3 <- lm(G1~.-1, data=data_G3)
summary(lm.model3)
lm.model3 <- lm(G3~.-1, data=data_G3)
summary(lm.model3)
data_G3 <- select(data, -c("school","G1","G2"))
lm.model3 <- lm(G3~.-1, data=data_G3)
summary(lm.model3)
data_G3 <- select(data, -c("school","G2","G3"))
lm.model2 <- lm(G2~.-1, data=data_G2)
data_G2 <- select(data, -c("school","G2","G3"))
lm.model2 <- lm(G2~.-1, data=data_G2)
data_G2 <- select(data, -c("school","G3"))
lm.model2 <- lm(G2~.-1, data=data_G2)
summary(lm.model2)
lm.model2 <- lm(G2~G1.-1, data=data_G2)
lm.model2 <- lm(G2~G1-1, data=data_G2)
summary(lm.model2)
data_G3 <- select(data, -c("school"))
data_G3 <- select(data, -c("school"."G2"))
data_G3 <- select(data, -c("school","G2"))
lm.model2 <- lm(G3~G1-1, data=data_G3)
summary(lm.model2)
data_G3 <- select(data, -c("school","G2","G1"))
lm.model2 <- lm(G3~G1-1, data=data_G3)
lm.model2 <- lm(G3~.-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(G3~sex+studytime+failures+schoolsup+goout-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(sqrt(G3)~sex+studytime+failures+schoolsup+goout-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(sqrt(sqrt(G3))~sex+studytime+failures+schoolsup+goout-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(G3~-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(G2~.-1, data=data_G2)
summary(lm.model2)
lm.model2 <- lm(G2~Fjob+traveltime+romantic+G1-1, data=data_G2)
summary(lm.model2)
lm.model2 <- lm(G2~traveltime+romantic+G1-1, data=data_G2)
summary(lm.model2)
G2.model <- lm(G2~traveltime+romantic+G1-1, data=data_G2)
summary(lm.model2)
AIC(G2.model)
# 检验是否正态
qqPlot(G2.model)
# 检验是否线性
crPlots(G2.model)
# 因变量幂次检验
spreadLevelPlot(G2.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G2.model)
# 离群值检验
influencePlot(G2.model)
G2.model <- lm(G2~traveltime+romantic+G1+sex+studytime+failures+schoolsup+goout-1, data=data_G2)
summary(lm.model2)
G2.model <- lm(G2~traveltime+romantic+G1+sex+studytime+failures+schoolsup+goout-1, data=data_G2)
summary(G2.model)
G2.model <- lm(G2~traveltime+romantic+G1-1, data=data_G2)
summary(G2.model)
lm.model2 <- lm(G3~-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(G3~.-1, data=data_G3)
summary(lm.model2)
data_G3 <- select(data, -c("school"))
lm.model2 <- lm(G3~.-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(G3~famrel+absences+G2+G1-1, data=data_G3)
summary(lm.model2)
lm.model2 <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(lm.model2)
lm.model3 <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(lm.model3)
lm.model3 <- lm(G3~famrel+absences+G2, data=data_G3)
summary(lm.model3)
lm.model3 <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(lm.model3)
G3.model <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(G3.model)
AIC(G3.model)
# 检验是否正态
qqPlot(G3.model)
# 检验是否线性
crPlots(G3.model)
# 因变量幂次检验
spreadLevelPlot(G3.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G3.model)
# 离群值检验
influencePlot(G3.model)
G3.model <- lm(G3~sqrt(famrel+absences+G2-1), data=data_G3)
summary(G3.model)
G3.model <- lm(I(G3^2)~famrel+absences+G2-1, data=data_G3)
summary(G3.model)
AIC(G3.model)
# 检验是否正态
qqPlot(G3.model)
# 检验是否线性
crPlots(G3.model)
# 因变量幂次检验
spreadLevelPlot(G3.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G3.model)
# 离群值检验
influencePlot(G3.model)
G3.model <- lm(G3^2~famrel+absences+G2-1, data=data_G3)
summary(G3.model)
G3.model <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(G3.model)
AIC(G3.model)
# 检验是否正态
qqPlot(G3.model)
# 检验是否线性
crPlots(G3.model)
# 因变量幂次检验
spreadLevelPlot(G3.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G3.model)
# 离群值检验
influencePlot(G3.model)
getwd()
View(data)
lm.model <- lm(G1~.-1, data=data_G1)
lm.model
summary(lm.model)
summary(lm.model)
lmFitToPaperTable(lm.model)
install.packages("apatable")
install.packages("apaTable")
library(apaTable)
install.packages("gtsummary")
install.packages("gtsummary")
install.packages("gtsummary")
library(gtsummary)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(gtsummary)
library(knitr)
summary(lm.model)
summary(lm.model)
kable()
lm.model <- lm(G1~., data=data_G1)
summary(lm.model)
kable()
lm.model <- lm(G1~., data=data_G1)
kable(summary(lm.model))
library(broom)
library(knitr)
library(dplyr)
install.packages("rlang")
install.packages("rlang")
library(knitr)
library(dplyr)
install.packages("rlang")
install.packages("rlang")
getwd()
data <- read.csv("./archive/student-mat.csv")
head(data)
str(data)
data$school <- as.factor(data$school)
data$sex <- as.factor(data$sex)
data$address <- as.factor(data$address)
data$famsize <- as.factor(data$famsize)
data$Pstatus <- as.factor(data$Pstatus)
data$Mjob <- as.factor(data$Mjob)
data$Fjob <- as.factor(data$Fjob)
data$reason <- as.factor(data$reason)
data$guardian <- as.factor(data$guardian)
data$schoolsup <- as.factor(data$schoolsup)
data$famsup <- as.factor(data$famsup)
data$paid <- as.factor(data$paid)
data$activities <- as.factor(data$activities)
data$nursery <- as.factor(data$nursery)
data$higher <- as.factor(data$higher)
data$internet <- as.factor(data$internet)
data$romantic <- as.factor(data$romantic)
library(knitr)
library(dplyr)
update.packages("rlang")
update.packages("rlang")
library(knitr)
library(dplyr)
library(rlang)
library(dplyr)
detach("package:rlang", unload = TRUE)
update.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
library(gtsummary)
library(dplyr)
data_G1 <- select(data, -c("school", "G2", "G3"))
t1 <- tbl_regression(lm.model)
# 拟合线性模型
lm.model <- lm(G1~., data=data_G1)
t1 <- tbl_regression(lm.model)
t1
t1 <- tbl_regression(lm.model, cex=0.5)
t1
library(broom)
library(knitr)
拟合线性模型
library(broom)
library(knitr)
# 拟合线性模型
lm.model <- lm(G1~., data=data_G1)
# 将模型结果输出为表格
tidy_table <- tidy(lm.model) %>%
mutate(
Estimate = round(estimate, 3),
Std.Error = round(std.error, 3),
t.value = round(statistic, 3),
p.value = format.pval(p.value)
) %>%
select(-c(df, conf.low, conf.high)) %>%
kable()
library(broom)
library(knitr)
# 拟合线性模型
lm.model <- lm(G1~., data=data_G1)
# 将模型结果输出为表格
tidy_table <- tidy(lm.model) %>%
mutate(
Estimate = round(estimate, 3),
Std.Error = round(std.error, 3),
t.value = round(statistic, 3),
p.value = format.pval(p.value)
) %>%
select(-c(data_G1, conf.low, conf.high)) %>%
kable()
library(broom)
library(knitr)
# 拟合线性模型
lm.model <- lm(G1~., data=data_G1)
# 将模型结果输出为表格
tidy_table <- tidy(lm.model) %>%
mutate(
Estimate = round(estimate, 3),
Std.Error = round(std.error, 3),
t.value = round(statistic, 3),
p.value = format.pval(p.value)
) %>%
select(-c(data_G1, conf.low, conf.high)) %>%
kable()
library(broom)
library(knitr)
# 拟合线性模型
lm.model <- lm(G1~., data=data_G1)
# 将模型结果输出为表格
tidy_table <- tidy(lm.model) %>%
mutate(
Estimate = round(estimate, 3),
Std.Error = round(std.error, 3),
t.value = round(statistic, 3),
p.value = format.pval(p.value)
) %>%
kable()
kable(tidy_table)
# 将模型结果输出为表格
tidy_table <- tidy(lm.model) %>%
mutate(
Estimate = round(estimate, 3),
Std.Error = round(std.error, 3),
t.value = round(statistic, 3),
p.value = format.pval(p.value)
)
kable(tidy_table)
library(broom)
library(knitr)
# 拟合线性模型
lm.model <- lm(G1~., data=data_G1)
summary(lm.model)
install.packages("apaTable")
lm.model <- lm(G1~.-1, data=data_G1)
lm.model
summary(lm.model)
G1.model <- lm(G1~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model)
G1.model <- lm(G1~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model)
G1.model <- lm(G1~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model)
data_G1[c(3,79,199,233,249),]
data_G1 <- data_G1[-c(3,79,199,233,249),]
G1.model2 <- lm(sqrt(sqrt(G1))~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model2)
AIC(G1.model2)
AIC(G1.model)
# 检验是否正态
qqPlot(G1.model)
library(car)
plot(G1.model)
AIC(G1.model)
# 检验是否正态
qqPlot(G1.model)
# 检验是否线性
crPlots(G1.model)
# 因变量幂次检验
spreadLevelPlot(G1.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G1.model)
# 共线性，无截距，算了吧不看了
vif(G1.model)
# 离群值检验
influencePlot(G1.model)
outlier.test(G1.model)
outlierTtest(G1.model)
outlierTest(G1.model)
data_G1 <- data_G1[-c(199),]
G1.model2 <- lm(sqrt(sqrt(G1))~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model2)
AIC(G1.model2)
AIC(G1.model)
# 检验是否正态
qqPlot(G1.model)
# 检验是否线性
crPlots(G1.model)
# 因变量幂次检验
spreadLevelPlot(G1.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G1.model)
# 共线性，无截距，算了吧不看了
vif(G1.model)
outlierTest(G1.model)
# 离群值检验
influencePlot(G1.model)
G1.model2 <- lm(sqrt(sqrt(G1))~sex+studytime+failures+schoolsup+goout-1,
data=data_G1)
summary(G1.model2)
AIC(G1.model2)
cov(x=data_G1$studytime, y=data_G1$goout)
AIC(G1.model2)
# 检验是否正态
qqPlot(G1.model2)
# 检验是否线性
crPlots(G1.model2)
# 因变量幂次检验
spreadLevelPlot(G1.model2)
# 残差自相关性检验
durbinWatsonTest(G1.model2)
# 离群值检验
influencePlot(G1.model2)
data_G2 <- select(data, -c("school","G3"))
G2.model <- lm(G2~traveltime+romantic+G1-1, data=data_G2)
summary(G2.model)
cov(data_G2$G1, data_G2$G2)
cor(data_G2$G1, data_G2$G2)
cor(x=data_G1$studytime, y=data_G1$goout)
AIC(G2.model)
# 检验是否正态
qqPlot(G2.model)
# 检验是否线性
crPlots(G2.model)
# 因变量幂次检验
spreadLevelPlot(G2.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G2.model)
# 离群值检验
influencePlot(G2.model)
G2.model <- lm(G2^(1.5)~traveltime+romantic+G1-1, data=data_G2)
summary(G2.model)
AIC(G2.model)
# 检验是否正态
qqPlot(G2.model)
# 检验是否线性
crPlots(G2.model)
# 因变量幂次检验
spreadLevelPlot(G2.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G2.model)
# 离群值检验
influencePlot(G2.model)
G2.model <- lm(G2~traveltime+romantic+G1-1, data=data_G2)
summary(G2.model)
data_G2_2 <- select(data, -c("school","G3", "G1"))
G2.model3 <- lm(G2~.-1, data=data_G2_2)
summary(G2.model)
summary(G2.model2)
G2.model3 <- lm(G2~.-1, data=data_G2_2)
summary(G2.model2)
G2.model3 <- lm(G2~.-1, data=data_G2_2)
summary(G2.model3)
G2.model3 <- lm(G2~sex+studytime+failures+schoolsup+famsup+romantic+goout-1, data=data_G2_2)
summary(G2.model3)
G2.model3 <- lm(G2~sex+studytime+failures+schoolsup+goout-1, data=data_G2_2)
summary(G2.model3)
data_G3 <- select(data, -c("school"))
G3.model <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(G3.model)
AIC(G3.model)
# 检验是否正态
qqPlot(G3.model)
# 检验是否线性
crPlots(G3.model)
# 因变量幂次检验
spreadLevelPlot(G3.model) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G3.model)
# 离群值检验
influencePlot(G3.model)
G3.model <- lm(G3~famrel+absences+G2-1, data=data_G3)
summary(G3.model)
G3.model2 <- lm(G3~sex+famrel+G1+G2-1, data=data_G3_2)
data_G3_2 = data_G3[-c(265,342,141,297,260,311,335,344,334,338),]
G3.model2 <- lm(G3~sex+famrel+G1+G2-1, data=data_G3_2)
summary(G3.model2)
G3.model2 <- lm(G3~sex+famrel+G1+G2-1, data=data_G3_2)
summary(G3.model2)
AIC(G3.model2)
# 检验是否正态
qqPlot(G3.model2)
# 检验是否线性
crPlots(G3.model2)
# 因变量幂次检验
spreadLevelPlot(G3.model2) # 0.46,但是呈水平
# 残差自相关性检验
durbinWatsonTest(G3.model2)
# 离群值检验
outlierTest(G3.model2)
# 离群值检验
influencePlot(G3.model2)
index <- sample(c(1,2), nrow(data), replace = T, prob = c(0.7,0.3))
train <- data[index == 1,]
test <- data[index == 2,]
index <- sample(c(1,2), nrow(data), replace = T, prob = c(0.7,0.3))
train <- data[index == 1,]
test <- data[index == 2,]
library(randomForest)
set.seed(20021119)
train.forest <- randomForest(G3~., data = train, importance = TRUE)
train.forest
#可以根据某种重要性的高低排个序，例如根据“IncNodePurity”指标
importance <- importance[order(importance$IncNodePurity, decreasing = TRUE),]
test.predict <- predict(train.forest, newdata = test)
plot(test.predict, test$G3)
summary(train.forest)
importance <- train.forest$importance
importance# 两个值都是越大越好
importance <- as.data.frame(importance)
#可以根据某种重要性的高低排个序，例如根据“IncNodePurity”指标
importance <- importance[order(importance$IncNodePurity, decreasing = TRUE),]
head(importance)
#提取验证结果绘图
train.cv <- data.frame(sapply(train.cv, '[[', 'error.cv'))
set.seed(20021119)
train.cv <- replicate(5, rfcv(train[-ncol(train)],
train$G3, cv.fold = 10,
step = 1.5), simplify = FALSE)
train.cv
#提取验证结果绘图
train.cv <- data.frame(sapply(train.cv, '[[', 'error.cv'))
train.cv$otus <- rownames(train.cv)
train.cv <- reshape2::melt(train.cv, id = 'otus')
train.cv$otus <- as.numeric(as.character(train.cv$otus))
train.cv.mean <- aggregate(train.cv$value, by = list(train.cv$otus), FUN = mean)
head(train.cv.mean, 10)
#拟合线图
library(ggplot2)
ggplot(train.cv.mean, aes(Group.1, x)) +
geom_line() +
theme(panel.grid = element_blank(), panel.background = element_rect(color = 'black', fill = 'transparent')) +
labs(title = '',x = 'Number of Features', y = 'Cross-validation error')
train.forest2 <- randomForest(G3~G2+G1+absences+failures-1, data = data,
importance = TRUE, ntree=5000)
train.forest2
train.forest2 <- randomForest(G3~G2+G1+absences+failures-1, data = data_G3_2,
importance = TRUE, ntree=5000)
train.forest2
G3_model3 <- lm(G3~G1+G2+absences+failures-1, data=data_G3_2)
summary(G3_model3)
vif(G3_model3)
